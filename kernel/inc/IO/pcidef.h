#pragma once

enum PCI_CLASS {
	PCI_CLASS_UNCLASSIFIED = 0,
	PCI_CLASS_MASS_STORAGE_CONTROLLER = 1,
	PCI_CLASS_NETWORK_CONTROLLER = 2,
	PCI_CLASS_DISPLAY_CONTROLLER = 3,
	PCI_CLASS_MULTIMEDIA_CONTROLLER = 4,
	PCI_CLASS_MEMORY_CONTROLLER = 5,
	PCI_CLASS_BRIDGE = 6,
	PCI_CLASS_SIMPLE_COMMUNICATION_CONTROLLER = 7,
	PCI_CLASS_BASE_SYSTEM_PERIPHERAL = 8,
	PCI_CLASS_INPUT_DEVICE_CONTROLLER = 9,
	PCI_CLASS_DOCKING_STATION = 0xA,
	PCI_CLASS_PROCESSOR = 0xB,
	PCI_CLASS_SERIAL_BUS_CONTROLLER = 0xC,
	PCI_CLASS_WIRELESS_CONTROLLER = 0xD,
	PCI_CLASS_INTELLIGENT_CONTROLLER = 0xE,
	PCI_CLASS_SATELLITE_COMMUNICATION_CONTROLLER = 0xF,
	PCI_CLASS_ENCRYPTION_CONTROLLER = 0x10,
	PCI_CLASS_SIGNAL_PROCESSING_CONTROLLER = 0x11,
	PCI_CLASS_PROCESSING_ACCELERATOR = 0x12,
	PCI_CLASS_NONESSENTIAL_INSTRUMENTATION = 0x13,
	PCI_CLASS_COPROCESSOR = 0x40,
	PCI_UNASSIGNED_CLASS = 0xFF
};

#define PCI_VENDOR_ID 0
#define PCI_DEVICE_ID 2
#define PCI_COMMAND 4
#define PCI_STATUS 6
#define PCI_REVISION_ID 8
#define PCI_PROGRAM_INTERFACE 9
#define PCI_SUBCLASS 10
#define PCI_CLASS 11
#define PCI_CACHE_LINE_SIZE 12
#define PCI_LATENCY_TIMER 13
#define PCI_HEADER_TYPE 14
#define PCI_BUILTIN_SELF_TEST 0xF
#define PCI_BAR 0x10
#define PCI_CARDBUS_CIS_PTR 0x28
#define PCI_SUBSYSTEM_VENDOR_ID 0x2C
#define PCI_SUBSYSTEM_ID 0x2E
#define PCI_EXPANSION_ROM_BASE_ADDRESS 0x30
#define PCI_CAPABILITIES_PTR 0x34
#define PCI_INTERRUPT_LINE 0x38
#define PCI_INTERRUPT_PIN 0x39
#define PCI_MIN_GRANT 0x3A
#define PCI_MAX_LATENCY 0x3B

#pragma pack(push, 1)

typedef struct _PCI_CONFIGURATION_HEADER {
	UINT16 VendorId;
	UINT16 DeviceId;
	UINT16 Command;
	UINT16 Status;
	UINT8 RevisionId;
	UINT8 ProgramInterface;
	UINT8 DeviceSubclass;
	UINT8 DeviceClass;
	UINT8 CacheLineSize;
	UINT8 LatencyTimer;
	UINT8 HeaderType;
	UINT8 BuiltinSelfTest;
	UINT32 BaseAddress0;
	UINT32 BaseAddress1;
	UINT32 BaseAddress2;
	UINT32 BaseAddress3;
	UINT32 BaseAddress4;
	UINT32 BaseAddress5;
	UINT32 CardbusCISPtr;
	UINT16 SubsystemVendorId;
	UINT16 SubsystemId;
	UINT32 ExpansionRomBaseAddr;
	UINT64 CapabilitiesPtr : 8;
	UINT64 Reserved : 56;
	UINT8 InterruptLine;
	UINT8 InterruptPin;
	UINT8 MinGrant;
	UINT8 MaxLatency;
} PCI_CONFIGURATION_HEADER;


// Unfinished
typedef struct _PCI_CAPABILITY_HEADER {
	UINT8 CapabilityId;
	UINT8 NextPointer;
} PCI_CAPABILITY_HEADER;

#define PCI_CAPABILITY_ID_MSI 5

#define MSI_CONTROL_ENABLE (1)
#define MSI_CONTROL_MULTIPLE_MESSAGE_CAPABLE (0b1110)
#define MSI_CONTROL_MULTIPLE_MESSAGE_ENABLE (0b111 << 4)
#define MSI_CONTROL_64BIT (1 << 7)
#define MSI_CONTROL_PER_VECTOR_MASKING (1 << 8)

#define MSI_MESSAGE_CONTROL 2
#define MSI_MESSAGE_ADDRESS 4
#define MSI64_MESSAGE_DATA 12
#define MSI64_MASK 16
#define MSI64_PENDING 20

#define MSI_MESSAGE_DATA 8
#define MSI_MASK 12
#define MSI_PENDING 16

// UINT64 MessageAddress
typedef struct _PCI_MSI_CAPABILITY_64BIT {
	PCI_CAPABILITY_HEADER Header;
	struct {
		UINT16 MsiEnable : 1;
		UINT16 MultipleMessageCapable : 3;
		UINT16 MultipleMessageEnable : 3;
		UINT16 x64AddressCapable : 1;
		UINT16 PerVectorMaskingCapable : 1;
		UINT16 Reserved : 7;
	} MessageControl;
	UINT64 MessageAddress;
	UINT16 MessageData;
	UINT16 Reserved;
	DWORD Mask;
	DWORD Pending;
} PCI_MSI_CAPABILITY_64BIT;

typedef struct _PCI_MSI_CAPABILITY {
	PCI_CAPABILITY_HEADER Header;
	struct {
		UINT16 MsiEnable : 1;
		UINT16 MultipleMessageCapable : 3;
		UINT16 MultipleMessageEnable : 3;
		UINT16 x64AddressCapable : 1;
		UINT16 PerVectorMaskingCapable : 1;
		UINT16 Reserved : 7;
	} MessageControl;
	DWORD MessageAddress;
	UINT16 MessageData;
	UINT16 Reserved;
	DWORD Mask;
	DWORD Pending;
} PCI_MSI_CAPABILITY;

#define PCI_CAPABILITY_ID_MSI_X 11

typedef struct _PCI_MSI_X_CAPABILITY {
	PCI_CAPABILITY_HEADER Header;
	UINT16 MessageControl;
	DWORD BarIndex : 3;
	DWORD TableOffset : 29;
	DWORD PendingBitBarIndex : 3;
	DWORD PendingBitOffset : 29;
} PCI_MSI_X_CAPABILITY;

#pragma pack(pop)

#define PCI_VENDOR_ID 0
#define PCI_DEVICE_ID 2
#define PCI_COMMAND 4
#define PCI_STATUS 6
#define PCI_REVISION_ID 8
#define PCI_PROGRAM_INTERFACE 9
#define PCI_SUBCLASS 10
#define PCI_CLASS 11
#define PCI_CACHE_LINE_SIZE 12
#define PCI_LATENCY_TIMER 13
#define PCI_HEADER_TYPE 14
#define PCI_BUILTIN_SELF_TEST 0xF
#define PCI_BAR 0x10
#define PCI_CARDBUS_CIS_PTR 0x28
#define PCI_SUBSYSTEM_VENDOR_ID 0x2C
#define PCI_SUBSYSTEM_ID 0x2E
#define PCI_EXPANSION_ROM_BASE_ADDRESS 0x30
#define PCI_CAPABILITIES_PTR 0x34
#define PCI_INTERRUPT_LINE 0x38
#define PCI_INTERRUPT_PIN 0x39
#define PCI_MIN_GRANT 0x3A
#define PCI_MAX_LATENCY 0x3B

// PCI STATUS BITMASK

#define PCI_STATUS_INTERRUPT (1 << 3)
#define PCI_STATUS_CAPABILITES_LIST (1 << 4)
#define PCI_STATUS_66MHz (1 << 5)
#define PCI_STATUS_FAST_BACK_TO_BACK (1 << 7)
#define PCI_STATUS_DEVSEL_TIMING (1 << 9)
#define PCI_STATUS_SIGNALED_TARGET_ABORT (1 << 11)
#define PCI_STATUS_RECEIVED_TARGET_ABORT (1 << 12)
#define PCI_STATUS_RECEIVED_MASTER_ABORT (1 << 13)
#define PCI_STATUS_SIGNALED_SYSTEM_ERROR (1 << 14)
#define PCI_STATUS_DETECTED_PARITY_ERROR (1 << 15)
